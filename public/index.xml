<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Samrat&#39;s blogs</title>
    <link>https://samratghale.github.io:1313/</link>
    <description>Recent content on Samrat&#39;s blogs</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 19 Jul 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://samratghale.github.io:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The simplicity of C</title>
      <link>https://samratghale.github.io:1313/posts/programming/</link>
      <pubDate>Fri, 19 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://samratghale.github.io:1313/posts/programming/</guid>
      <description>&amp;lsquo;An idiot admires complexity, a genius admires simplicity&amp;rsquo; - Terry A Davis The more i&amp;rsquo;ve programmed in C the more i&amp;rsquo;ve admired it&amp;rsquo;s simplicity. Even when i&amp;rsquo;m working on different programming languages I always try to think of problems in terms of how it would be implemented in C.&#xA;I want to give examples of features and explain why it&amp;rsquo;s simpler than other programming languages.&#xA;1. The C compilers The compiler has a very simple job; to turn C code to assembly (machine code).</description>
    </item>
    <item>
      <title>Chess inside Esp32</title>
      <link>https://samratghale.github.io:1313/posts/esp32/</link>
      <pubDate>Sat, 06 Jul 2024 00:00:00 +0000</pubDate>
      <guid>https://samratghale.github.io:1313/posts/esp32/</guid>
      <description>&lt;p&gt;This is my blog documenting the process of creating a chess engine and running it in a esp32.&lt;/p&gt;&#xA;&lt;p&gt;The project has 4 seperate parts&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;The chess engine&lt;/li&gt;&#xA;&lt;li&gt;Chess AI&lt;/li&gt;&#xA;&lt;li&gt;ESP32 ui&lt;/li&gt;&#xA;&lt;li&gt;ESP32 Networking&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;I will be dealing with these topic in the given order. And I&amp;rsquo;ll be updating the code in this &lt;a href=&#34;https://github.com/SamratGhale/chessmate&#34;&gt;repo&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;move-calculation&#34;&gt;Move calculation&lt;/h2&gt;&#xA;&lt;p&gt;The chess engine needs to calculate the possible move a piece can make&#xA;It should check where the piece is which positions can the piece moves into&lt;/p&gt;&#xA;&lt;p&gt;I have Implemented a very basic version of the move calculation (only for pawn and knight fow now) shown below.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
